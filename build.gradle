apply plugin: 'com.github.ben-manes.versions'

ext {
    versions = [
            build                  : [
                    sdk       : [
                            compile: 28,
                            target : 28,
                            min    : 21
                    ],
                    buildTools: "28.0.3"
            ],
            androidx               : [
                    appcompat       : "1.0.2",
                    constraintlayout: "1.1.3",
                    material        : "1.0.0",
                    legacy          : "1.0.0",
                    lifecycle       : "2.0.0"
            ],
            kotlin                 : "1.3.21",
            coroutines             : "1.1.1",
            timber                 : "4.7.1",
            dagger                 : "2.21",
            retrofit               : "2.5.0",
            kotlinCoroutinesAdapter: "0.9.2",
            converterMoshi         : "2.5.0",
            okhttp                 : "3.14.0",
            threetenabp            : "1.2.0",
            moshi                  : "1.8.0",
            kotshi                 : "1.0.6",
            glide                  : "4.9.0",
            test                   : [
                    runner  : "1.1.1",
                    espresso: "3.1.1",
                    junit   : "5.4.1",
                    mockk   : "1.9.3"
            ]
    ]
}

buildscript {
    ext {
        extractVersionCode = { versionName ->
            def (major, minor, patch) = versionName.toLowerCase().tokenize('.')
            return (major.toInteger() * 10000) + (minor.toInteger() * 100) + patch.toInteger()
        }
    }

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:3.3.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.21"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
