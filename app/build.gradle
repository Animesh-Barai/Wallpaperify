apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply from: '../commons-android.gradle'

def secretProperties = new Properties()
secretProperties.load(project.rootProject.file('secret.properties').newDataInputStream())

android {
    defaultConfig {
        applicationId "com.netchar.wallpaperify"

        vectorDrawables {
            useSupportLibrary true
        }

        renderscriptSupportModeEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "RELEASE_API_ACCESS_KEY", secretProperties['RELEASE_API_ACCESS_KEY'])
        buildConfigField("String", "RELEASE_API_SECRET_KEY", secretProperties['RELEASE_API_SECRET_KEY'])
        buildConfigField("String", "DEBUG_API_ACCESS_KEY", secretProperties['DEBUG_API_ACCESS_KEY'])
        buildConfigField("String", "DEBUG_API_SECRET_KEY", secretProperties['DEBUG_API_SECRET_KEY'])
        buildConfigField("String", "GOOGLE_PLAY_LICENSE_KEY", secretProperties['GOOGLE_PLAY_LICENSE_KEY'])
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }

        release {
            minifyEnabled false
            applicationIdSuffix '.release'
            versionNameSuffix '-release'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kapt {
        correctErrorTypes = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(project_modules.poweradapter)
    implementation project(project_modules.remote)

    // Kotlin
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.coroutines.android
    implementation deps.kotlin.coroutines.core

    // Androidx
    implementation deps.androidx.appcompat
    implementation deps.androidx.constraintlayout
    implementation deps.androidx.material
    implementation deps.androidx.legacy
    implementation deps.androidx.lifecycle
    implementation deps.androidx.navigation.fragment
    implementation deps.androidx.navigation.ui
    implementation deps.androidx.recyclerview

    // Timber
    implementation deps.timber

    // Dagger
    implementation deps.dagger.dagger
    implementation deps.dagger.android
    kapt deps.dagger.processor
    kapt deps.dagger.compiler

    // Retrofit
    implementation deps.retrofit.retrofit
    implementation deps.retrofit.adapter
    implementation deps.retrofit.converter

    // OkHttp
    implementation deps.okhttp.okhttp
    implementation deps.okhttp.interceptor

    // ThreeTen
    implementation deps.threetenabp

    // Moshi + Kotshi
    implementation deps.moshi
    implementation deps.kotshi.api
    kapt deps.kotshi.compiler

    // Glide
    implementation deps.glide.glide
    implementation deps.glide.okhttp3
    kapt deps.glide.compiler
}

dependencies {
    androidTestImplementation deps.test.runner
    androidTestImplementation deps.test.espresso

    testImplementation deps.test.junit.api
    testImplementation deps.test.junit.params
    testImplementation deps.test.junit.engine

    testImplementation deps.test.kotlin.test
    testImplementation deps.test.kotlin.junit
    testImplementation deps.test.mockk
    testImplementation deps.test.hamcrest
}
