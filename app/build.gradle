/*
 * Copyright Â© 2019 Eugene Glushankov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply from: '../commons-android.gradle'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

def appId = "com.netchar.wallpaperify"
def secretProperties = new Properties()
def secretPropertiesStream = project.rootProject.file('secret.properties').newDataInputStream()

try {
    secretProperties.load(secretPropertiesStream)
} finally {
    secretPropertiesStream.close()
}

android {
    signingConfigs {
        release {
            storeFile file(secretProperties['KEYSTORE_FILE_NAME'])
            storePassword secretProperties['KEYSTORE_PASSWORD']
            keyAlias = secretProperties['KEYSTORE_KEY_ALIAS']
            keyPassword secretProperties['KEYSTORE_KEY_PASSWORD']
        }
    }
    defaultConfig {
        applicationId appId

        vectorDrawables {
            useSupportLibrary true
        }

        renderscriptSupportModeEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "RELEASE_API_ACCESS_KEY", secretProperties['RELEASE_API_ACCESS_KEY'])
        buildConfigField("String", "RELEASE_API_SECRET_KEY", secretProperties['RELEASE_API_SECRET_KEY'])
        buildConfigField("String", "DEBUG_API_ACCESS_KEY", secretProperties['DEBUG_API_ACCESS_KEY'])
        buildConfigField("String", "DEBUG_API_SECRET_KEY", secretProperties['DEBUG_API_SECRET_KEY'])
        buildConfigField("String", "GOOGLE_PLAY_LICENSE_KEY", secretProperties['GOOGLE_PLAY_LICENSE_KEY'])
        proguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }

        release {
            minifyEnabled true
            applicationIdSuffix '.release'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                def flavor = variant.name
                def versionName = variant.versionName
                outputFileName = "wallpaperify_${flavor}_${versionName}.apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kapt {
        correctErrorTypes = true
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Modules
    implementation project(project_modules.remote)
    implementation project(project_modules.local)
    implementation project(project_modules.repository)
    implementation project(project_modules.common)
    implementation project(project_modules.auth)
    implementation project(project_modules.test)

    // Kotlin
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.coroutines.android
    implementation deps.kotlin.coroutines.core

    // Androidx
    implementation deps.androidx.appcompat
    implementation deps.androidx.constraintlayout
    implementation deps.androidx.material
    implementation deps.androidx.legacy
    implementation deps.androidx.lifecycle
    implementation deps.androidx.navigation.fragment
    implementation deps.androidx.navigation.ui
    implementation deps.androidx.recyclerview
    implementation deps.androidx.swiperefreshlayout
    implementation deps.androidx.card
    implementation deps.androidx.core
    implementation deps.androidx.preferences
    implementation deps.androidx.firebase.analytics
    implementation deps.androidx.firebase.crashlytics

    implementation deps.shimmer

    // Timber
    implementation deps.timber

    // Dagger
    implementation deps.dagger.dagger
    implementation deps.dagger.android
    kapt deps.dagger.processor
    kapt deps.dagger.compiler
    kaptTest deps.dagger.processor
    kaptTest deps.dagger.compiler

    // Retrofit
    implementation deps.retrofit.retrofit
    implementation deps.retrofit.adapter
    implementation deps.retrofit.converter

    // OkHttp
    implementation deps.okhttp.okhttp
    implementation deps.okhttp.interceptor

    // ThreeTen
    implementation deps.threetenabp

    // Moshi + Kotshi
    implementation deps.moshi
    implementation deps.kotshi.api
    kapt deps.kotshi.compiler

    // Glide
    implementation deps.glide.glide
    implementation deps.glide.okhttp3
    kapt deps.glide.compiler

    // Room
    implementation deps.androidx.room.runtime
    kapt deps.androidx.room.compiler

    implementation deps.transitionseverywhere
    implementation deps.quickpermissions
    implementation deps.photoview

//    implementation 'org.solovyev.android:checkout:1.2.2'
}

dependencies {
    androidTestImplementation deps.test.runner
    androidTestImplementation deps.test.espresso
    testImplementation deps.test.mockwebserver
}

apply plugin: 'com.google.gms.google-services'
